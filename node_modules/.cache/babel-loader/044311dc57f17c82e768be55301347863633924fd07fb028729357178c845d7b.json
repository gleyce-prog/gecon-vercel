{"ast":null,"code":"var _jsxFileName = \"/workspaces/gecon-vercel/src/config/Rotas_protegidas.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useRoutes, Navigate, useLocation } from 'react-router-dom';\nimport { routes } from './Rotas.js';\nimport { MODULOS } from './Globals.js';\nimport { getWithExpiration } from '../utils/Login.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isLogged = getWithExpiration();\nconst getModule = (key = null) => {\n  return MODULOS.filter(modulo => modulo && (modulo === null || modulo === void 0 ? void 0 : modulo.ativo) === true).map(modulo => modulo.id).includes(key);\n};\nconst RoutesProtected = () => {\n  _s();\n  const element = useRoutes(routes);\n  const location = useLocation();\n  const currentRoute = getCurrentRoute(routes, location.pathname);\n  if (location.pathname === \"/\") return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 16\n  }, this);else if (!element || !currentRoute) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/pagina-nao-encontrada\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 16\n  }, this);\n  return hasAccess(currentRoute) ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 48\n  }, this);\n};\n_s(RoutesProtected, \"elzTh55Sd/MlJytDUUaF6VhnYNo=\", false, function () {\n  return [useRoutes, useLocation];\n});\n_c = RoutesProtected;\nconst getCurrentRoute = (routes, currentPath) => {\n  return routes.find(route => route.path === currentPath);\n};\nconst hasAccess = currentRoute => {\n  return currentRoute.type === \"public\" || isLogged && (currentRoute.type === \"logged\" || Permission(currentRoute.key));\n};\nconst Permission = key => {\n  var _routes$find;\n  return typeof key === 'number' ? getModule(key) : getModule((_routes$find = routes.find(route => route.path === key)) === null || _routes$find === void 0 ? void 0 : _routes$find.key);\n};\n_c2 = Permission;\nexport { RoutesProtected, Permission };\nvar _c, _c2;\n$RefreshReg$(_c, \"RoutesProtected\");\n$RefreshReg$(_c2, \"Permission\");","map":{"version":3,"names":["React","useRoutes","Navigate","useLocation","routes","MODULOS","getWithExpiration","jsxDEV","_jsxDEV","isLogged","getModule","key","filter","modulo","ativo","map","id","includes","RoutesProtected","_s","element","location","currentRoute","getCurrentRoute","pathname","to","fileName","_jsxFileName","lineNumber","columnNumber","hasAccess","_c","currentPath","find","route","path","type","Permission","_routes$find","_c2","$RefreshReg$"],"sources":["/workspaces/gecon-vercel/src/config/Rotas_protegidas.js"],"sourcesContent":["import React from 'react';\r\nimport { useRoutes, Navigate, useLocation  } from 'react-router-dom';\r\nimport { routes } from './Rotas.js';\r\nimport { MODULOS } from './Globals.js';\r\nimport { getWithExpiration } from '../utils/Login.js';\r\n\r\nconst isLogged = getWithExpiration();\r\n\r\nconst getModule = (key = null) => {\r\n    return MODULOS.filter((modulo) => modulo && modulo?.ativo === true).map((modulo) => modulo.id).includes(key);\r\n}\r\n\r\n\r\nconst RoutesProtected = () => {\r\n    const element = useRoutes(routes);\r\n    const location = useLocation();  \r\n    const currentRoute = getCurrentRoute(routes, location.pathname);  \r\n    if (location.pathname === \"/\" ) \r\n        return <Navigate to=\"/login\" />;  \r\n    else if (!element || !currentRoute)\r\n        return <Navigate to=\"/pagina-nao-encontrada\" />;\r\n\r\n    return hasAccess(currentRoute) ? element : <Navigate to=\"/login\" />;\r\n};\r\n\r\n\r\nconst getCurrentRoute = (routes, currentPath) => {\r\n    return routes.find((route) => route.path === currentPath);\r\n};\r\n\r\nconst hasAccess = (currentRoute) => {\r\n    return currentRoute.type === \"public\" || (isLogged && (currentRoute.type === \"logged\" || Permission(currentRoute.key)));\r\n}\r\nconst Permission = (key) => {\r\n    return typeof key === 'number' ? getModule(key) : getModule(routes.find(route => route.path === key)?.key);\r\n};\r\n\r\nexport { RoutesProtected, Permission };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAS,kBAAkB;AACpE,SAASC,MAAM,QAAQ,YAAY;AACnC,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,iBAAiB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,QAAQ,GAAGH,iBAAiB,CAAC,CAAC;AAEpC,MAAMI,SAAS,GAAGA,CAACC,GAAG,GAAG,IAAI,KAAK;EAC9B,OAAON,OAAO,CAACO,MAAM,CAAEC,MAAM,IAAKA,MAAM,IAAI,CAAAA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,KAAK,MAAK,IAAI,CAAC,CAACC,GAAG,CAAEF,MAAM,IAAKA,MAAM,CAACG,EAAE,CAAC,CAACC,QAAQ,CAACN,GAAG,CAAC;AAChH,CAAC;AAGD,MAAMO,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,OAAO,GAAGnB,SAAS,CAACG,MAAM,CAAC;EACjC,MAAMiB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAC9B,MAAMmB,YAAY,GAAGC,eAAe,CAACnB,MAAM,EAAEiB,QAAQ,CAACG,QAAQ,CAAC;EAC/D,IAAIH,QAAQ,CAACG,QAAQ,KAAK,GAAG,EACzB,oBAAOhB,OAAA,CAACN,QAAQ;IAACuB,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC,KAC/B,IAAI,CAACT,OAAO,IAAI,CAACE,YAAY,EAC9B,oBAAOd,OAAA,CAACN,QAAQ;IAACuB,EAAE,EAAC;EAAwB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEnD,OAAOC,SAAS,CAACR,YAAY,CAAC,GAAGF,OAAO,gBAAGZ,OAAA,CAACN,QAAQ;IAACuB,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvE,CAAC;AAACV,EAAA,CAVID,eAAe;EAAA,QACDjB,SAAS,EACRE,WAAW;AAAA;AAAA4B,EAAA,GAF1Bb,eAAe;AAarB,MAAMK,eAAe,GAAGA,CAACnB,MAAM,EAAE4B,WAAW,KAAK;EAC7C,OAAO5B,MAAM,CAAC6B,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,KAAKH,WAAW,CAAC;AAC7D,CAAC;AAED,MAAMF,SAAS,GAAIR,YAAY,IAAK;EAChC,OAAOA,YAAY,CAACc,IAAI,KAAK,QAAQ,IAAK3B,QAAQ,KAAKa,YAAY,CAACc,IAAI,KAAK,QAAQ,IAAIC,UAAU,CAACf,YAAY,CAACX,GAAG,CAAC,CAAE;AAC3H,CAAC;AACD,MAAM0B,UAAU,GAAI1B,GAAG,IAAK;EAAA,IAAA2B,YAAA;EACxB,OAAO,OAAO3B,GAAG,KAAK,QAAQ,GAAGD,SAAS,CAACC,GAAG,CAAC,GAAGD,SAAS,EAAA4B,YAAA,GAAClC,MAAM,CAAC6B,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAKxB,GAAG,CAAC,cAAA2B,YAAA,uBAAxCA,YAAA,CAA0C3B,GAAG,CAAC;AAC9G,CAAC;AAAC4B,GAAA,GAFIF,UAAU;AAIhB,SAASnB,eAAe,EAAEmB,UAAU;AAAG,IAAAN,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}