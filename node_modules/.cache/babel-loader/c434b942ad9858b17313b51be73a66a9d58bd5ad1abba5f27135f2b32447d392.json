{"ast":null,"code":"import Swal from 'sweetalert2';\n\n// Função para mostrar alerta de sucesso\nconst mostrarAlertaSucesso = (titulo, mensagem, callback) => {\n  Swal.fire({\n    title: titulo,\n    icon: 'success',\n    confirmButtonColor: '#3085d6',\n    confirmButtonText: 'OK'\n  }).then(result => {\n    if (result.isConfirmed && callback) {\n      callback();\n    }\n  });\n};\n\n// Função para mostrar alerta de erro\nconst mostrarAlertaErro = mensagem => {\n  Swal.fire({\n    title: 'Erro',\n    text: mensagem,\n    icon: 'error',\n    confirmButtonColor: '#135131',\n    confirmButtonText: 'OK'\n  });\n};\n\n// Função para mostrar alerta de confirmação\nconst mostrarAlertaConfirmacao = (titulo, texto, acao, timeout = null) => {\n  try {\n    Swal.fire({\n      title: titulo,\n      text: texto,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#135131',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Sim',\n      cancelButtonText: 'Cancelar'\n    }).then(result => {\n      if (result.isConfirmed && acao) {\n        acao().then(response => {\n          if (response.status === 200) {\n            mostrarAlertaSucesso('Sucesso', 'Ação realizada com sucesso.');\n            if (timeout) {\n              setTimeout(() => {\n                window.location.reload();\n              }, timeout);\n            }\n          }\n        }).catch(error => {\n          mostrarAlertaErro('Houve um problema ao realizar a ação: ' + error.message);\n        });\n      }\n    });\n  } catch (error) {\n    mostrarAlertaErro('Houve um problema ao realizar a ação: ' + error.message);\n  }\n};\nexport { mostrarAlertaErro, mostrarAlertaSucesso, mostrarAlertaConfirmacao };","map":{"version":3,"names":["Swal","mostrarAlertaSucesso","titulo","mensagem","callback","fire","title","icon","confirmButtonColor","confirmButtonText","then","result","isConfirmed","mostrarAlertaErro","text","mostrarAlertaConfirmacao","texto","acao","timeout","showCancelButton","cancelButtonColor","cancelButtonText","response","status","setTimeout","window","location","reload","catch","error","message"],"sources":["/workspaces/gecon-vercel/src/lib/swal.js"],"sourcesContent":["import Swal from 'sweetalert2';\r\n\r\n// Função para mostrar alerta de sucesso\r\nconst mostrarAlertaSucesso = (titulo, mensagem, callback) => {\r\n  Swal.fire({\r\n    title: titulo,\r\n    icon: 'success',\r\n    confirmButtonColor: '#3085d6',\r\n    confirmButtonText: 'OK',\r\n  }).then((result) => {\r\n    if (result.isConfirmed && callback) {\r\n      callback();\r\n    }\r\n  });\r\n};\r\n\r\n// Função para mostrar alerta de erro\r\nconst mostrarAlertaErro = (mensagem) => {\r\n  Swal.fire({\r\n    title: 'Erro',\r\n    text: mensagem,\r\n    icon: 'error',\r\n    confirmButtonColor: '#135131',\r\n    confirmButtonText: 'OK',\r\n  });\r\n};\r\n\r\n\r\n// Função para mostrar alerta de confirmação\r\nconst mostrarAlertaConfirmacao = (titulo, texto, acao, timeout = null) => {\r\n  try {\r\n    Swal.fire({\r\n      title: titulo,\r\n      text: texto,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#135131',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Sim',\r\n      cancelButtonText: 'Cancelar'\r\n    }).then((result) => {\r\n      if (result.isConfirmed && acao) {\r\n        acao().then((response) => {\r\n          if (response.status === 200) {\r\n            mostrarAlertaSucesso('Sucesso', 'Ação realizada com sucesso.');\r\n            if (timeout) {\r\n              setTimeout(() => {\r\n                window.location.reload();\r\n              }, timeout);\r\n            }\r\n          }\r\n        })\r\n          .catch((error) => {\r\n            mostrarAlertaErro('Houve um problema ao realizar a ação: ' + error.message);\r\n          });\r\n      }\r\n    })\r\n  } catch (error) {\r\n    mostrarAlertaErro('Houve um problema ao realizar a ação: ' + error.message);\r\n  }\r\n};\r\n\r\nexport { mostrarAlertaErro, mostrarAlertaSucesso, mostrarAlertaConfirmacao };"],"mappings":"AAAA,OAAOA,IAAI,MAAM,aAAa;;AAE9B;AACA,MAAMC,oBAAoB,GAAGA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;EAC3DJ,IAAI,CAACK,IAAI,CAAC;IACRC,KAAK,EAAEJ,MAAM;IACbK,IAAI,EAAE,SAAS;IACfC,kBAAkB,EAAE,SAAS;IAC7BC,iBAAiB,EAAE;EACrB,CAAC,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAK;IAClB,IAAIA,MAAM,CAACC,WAAW,IAAIR,QAAQ,EAAE;MAClCA,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMS,iBAAiB,GAAIV,QAAQ,IAAK;EACtCH,IAAI,CAACK,IAAI,CAAC;IACRC,KAAK,EAAE,MAAM;IACbQ,IAAI,EAAEX,QAAQ;IACdI,IAAI,EAAE,OAAO;IACbC,kBAAkB,EAAE,SAAS;IAC7BC,iBAAiB,EAAE;EACrB,CAAC,CAAC;AACJ,CAAC;;AAGD;AACA,MAAMM,wBAAwB,GAAGA,CAACb,MAAM,EAAEc,KAAK,EAAEC,IAAI,EAAEC,OAAO,GAAG,IAAI,KAAK;EACxE,IAAI;IACFlB,IAAI,CAACK,IAAI,CAAC;MACRC,KAAK,EAAEJ,MAAM;MACbY,IAAI,EAAEE,KAAK;MACXT,IAAI,EAAE,SAAS;MACfY,gBAAgB,EAAE,IAAI;MACtBX,kBAAkB,EAAE,SAAS;MAC7BY,iBAAiB,EAAE,MAAM;MACzBX,iBAAiB,EAAE,KAAK;MACxBY,gBAAgB,EAAE;IACpB,CAAC,CAAC,CAACX,IAAI,CAAEC,MAAM,IAAK;MAClB,IAAIA,MAAM,CAACC,WAAW,IAAIK,IAAI,EAAE;QAC9BA,IAAI,CAAC,CAAC,CAACP,IAAI,CAAEY,QAAQ,IAAK;UACxB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;YAC3BtB,oBAAoB,CAAC,SAAS,EAAE,6BAA6B,CAAC;YAC9D,IAAIiB,OAAO,EAAE;cACXM,UAAU,CAAC,MAAM;gBACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;cAC1B,CAAC,EAAET,OAAO,CAAC;YACb;UACF;QACF,CAAC,CAAC,CACCU,KAAK,CAAEC,KAAK,IAAK;UAChBhB,iBAAiB,CAAC,wCAAwC,GAAGgB,KAAK,CAACC,OAAO,CAAC;QAC7E,CAAC,CAAC;MACN;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdhB,iBAAiB,CAAC,wCAAwC,GAAGgB,KAAK,CAACC,OAAO,CAAC;EAC7E;AACF,CAAC;AAED,SAASjB,iBAAiB,EAAEZ,oBAAoB,EAAEc,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}