{"ast":null,"code":"import axios from 'axios';\nimport { API_URL, TOKEN } from '../config/Globals';\nexport const api = (withAuth = false) => axios.create({\n  baseURL: `${API_URL}`,\n  headers: withAuth ? {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${TOKEN}`\n  } : {\n    'Content-Type': 'application/json'\n  },\n  data: {}\n});\nexport default async function handler(req, res) {\n  const apiUrl = 'http://195.35.40.77:8080' + req.url;\n  try {\n    const response = await fetch(apiUrl, {\n      method: req.method,\n      headers: {\n        'Content-Type': 'application/json',\n        ...req.headers\n      },\n      body: req.method !== 'GET' ? JSON.stringify(req.body) : null\n    });\n    const data = await response.json();\n    res.status(200).json(data);\n  } catch (error) {\n    res.status(500).json({\n      error: 'Erro ao fazer requisição para a API.'\n    });\n  }\n}","map":{"version":3,"names":["axios","API_URL","TOKEN","api","withAuth","create","baseURL","headers","data","handler","req","res","apiUrl","url","response","fetch","method","body","JSON","stringify","json","status","error"],"sources":["/workspaces/gecon-vercel/src/lib/Axios.js"],"sourcesContent":["import axios from 'axios'\r\nimport { API_URL, TOKEN } from '../config/Globals'\r\n\r\nexport const api = (withAuth = false) => axios.create({\r\n  baseURL: `${API_URL}`,\r\n  headers: withAuth ? {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${TOKEN}`\r\n  } : {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  data: {}\r\n})\r\n\r\nexport default async function handler(req, res) {\r\n  const apiUrl = 'http://195.35.40.77:8080' + req.url;\r\n  try {\r\n    const response = await fetch(apiUrl, {\r\n      method: req.method,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...req.headers\r\n      },\r\n      body: req.method !== 'GET' ? JSON.stringify(req.body) : null\r\n    });\r\n    const data = await response.json();\r\n    res.status(200).json(data);\r\n  } catch (error) {\r\n    res.status(500).json({ error: 'Erro ao fazer requisição para a API.' });\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,KAAK,QAAQ,mBAAmB;AAElD,OAAO,MAAMC,GAAG,GAAGA,CAACC,QAAQ,GAAG,KAAK,KAAKJ,KAAK,CAACK,MAAM,CAAC;EACpDC,OAAO,EAAE,GAAGL,OAAO,EAAE;EACrBM,OAAO,EAAEH,QAAQ,GAAG;IAClB,cAAc,EAAE,kBAAkB;IAClC,eAAe,EAAE,UAAUF,KAAK;EAClC,CAAC,GAAG;IACF,cAAc,EAAE;EAClB,CAAC;EACDM,IAAI,EAAE,CAAC;AACT,CAAC,CAAC;AAEF,eAAe,eAAeC,OAAOA,CAACC,GAAG,EAAEC,GAAG,EAAE;EAC9C,MAAMC,MAAM,GAAG,0BAA0B,GAAGF,GAAG,CAACG,GAAG;EACnD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,MAAM,EAAE;MACnCI,MAAM,EAAEN,GAAG,CAACM,MAAM;MAClBT,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,GAAGG,GAAG,CAACH;MACT,CAAC;MACDU,IAAI,EAAEP,GAAG,CAACM,MAAM,KAAK,KAAK,GAAGE,IAAI,CAACC,SAAS,CAACT,GAAG,CAACO,IAAI,CAAC,GAAG;IAC1D,CAAC,CAAC;IACF,MAAMT,IAAI,GAAG,MAAMM,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCT,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACD,IAAI,CAACZ,IAAI,CAAC;EAC5B,CAAC,CAAC,OAAOc,KAAK,EAAE;IACdX,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACD,IAAI,CAAC;MAAEE,KAAK,EAAE;IAAuC,CAAC,CAAC;EACzE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}